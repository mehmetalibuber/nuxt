{"version":3,"file":"AuthComposable-14236e1c.js","sources":["../../../../composables/AuthComposable.js"],"sourcesContent":["import axiosConfig from \"../axiosConfig.js\";\r\nimport config from \"../config.js\";\r\n\r\n// get CRM_HOST from env // dev or prod\r\nlet CRMHost;\r\nconst CRMHostRes = HelperComposable().GetCRMHost();\r\nCRMHostRes.then((res) => {\r\n  CRMHost = res;\r\n}).catch((error) => {\r\n  console.error(error);\r\n});\r\n\r\nfunction AuthComposable() {\r\n  // send register data\r\n  const SendRegisterData = async (data) => {\r\n    let RawData = null;\r\n    if (!data) {\r\n      return \"1\";\r\n    }\r\n    const AxiosResponse = await axiosConfig.post(\r\n      `${CRMHost}/auth/register`,\r\n      data\r\n    );\r\n    if (AxiosResponse.status) {\r\n      return \"0\";\r\n    }\r\n    if (AxiosResponse.message) {\r\n      RawData = AxiosResponse.message;\r\n      return RawData;\r\n    } else {\r\n      return AxiosResponse;\r\n    }\r\n    // console.log(RawData);\r\n  };\r\n  // send login data\r\n  const SendLoginData = async (data) => {\r\n    let RawData = null;\r\n    if (!data) {\r\n      return \"1\";\r\n    }\r\n    const AxiosResponse = await axiosConfig.post(`${CRMHost}/auth/login`, data);\r\n    if (AxiosResponse.status) {\r\n      return AxiosResponse.data;\r\n    }\r\n    if (AxiosResponse.message) {\r\n      RawData = AxiosResponse.message;\r\n      return RawData;\r\n    } else {\r\n      return AxiosResponse;\r\n    }\r\n  };\r\n  // Get user Informations\r\n  const GetUserInformations = async () => {\r\n    let RawData = null;\r\n    const AccessToken = localStorage.getItem(\"AccessToken\");\r\n    if (!AccessToken) {\r\n      return \"Please login again\";\r\n    }\r\n    const AxiosResponse = await axiosConfig.get(`${CRMHost}/me/account`, {\r\n      headers: {\r\n        Authorization: `Bearer ${AccessToken}`,\r\n      },\r\n    });\r\n    if (AxiosResponse.status) {\r\n      return AxiosResponse.data;\r\n    }\r\n    if (AxiosResponse.message) {\r\n      RawData = AxiosResponse.message;\r\n      return RawData;\r\n    } else {\r\n      return AxiosResponse;\r\n    }\r\n  };\r\n  // Get user Reservations\r\n  const GetUserReservations = async () => {\r\n    let RawData = null;\r\n    const AccessToken = localStorage.getItem(\"AccessToken\");\r\n    if (!AccessToken) {\r\n      return \"Please login again\";\r\n    }\r\n    const AxiosResponse = await axiosConfig.get(`${CRMHost}/me/reservations`, {\r\n      headers: {\r\n        Authorization: `Bearer ${AccessToken}`,\r\n      },\r\n    });\r\n    if (AxiosResponse.status) {\r\n      return AxiosResponse.data;\r\n    }\r\n    if (AxiosResponse.message) {\r\n      RawData = AxiosResponse.message;\r\n      return RawData;\r\n    } else {\r\n      return AxiosResponse;\r\n    }\r\n  };\r\n  // get verification code for login with phone number\r\n  const GetLoginVerificationCode = async (number) => {\r\n    let RawData = null;\r\n    if (!number) {\r\n      return \"Please Enter Your Phone Number\";\r\n    }\r\n    const Website = config.CRM_WEBSITE;\r\n    const LoginData = {\r\n      phone: number,\r\n      webSite: Website,\r\n    };\r\n\r\n    const AxiosResponse = await axiosConfig.post(\r\n      `${CRMHost}/auth/phone`,\r\n      LoginData\r\n    );\r\n    if (AxiosResponse.status) {\r\n      return AxiosResponse.data;\r\n    }\r\n    if (AxiosResponse.message) {\r\n      RawData = AxiosResponse.message;\r\n      return RawData;\r\n    } else {\r\n      return AxiosResponse;\r\n    }\r\n  };\r\n  // confirm verification code for login with phone number\r\n  const ConfirmVerificationCode = async (code, number) => {\r\n    let RawData = null;\r\n    if (!code) {\r\n      return \"Please Enter Your Phone Verification Code\";\r\n    }\r\n    if (!number) {\r\n      return \"Please Refresh Page\";\r\n    }\r\n    const Website = config.CRM_WEBSITE;\r\n\r\n    const AxiosResponse = await axiosConfig.get(\r\n      `${CRMHost}/auth/phone?webSite=${Website}&code=${code}&phone=${number}`\r\n    );\r\n    //console.log(AxiosResponse);\r\n    if (AxiosResponse.status) {\r\n      return AxiosResponse.data;\r\n    }\r\n    if (AxiosResponse.message) {\r\n      RawData = AxiosResponse.message;\r\n      return RawData;\r\n    } else {\r\n      return AxiosResponse;\r\n    }\r\n  };\r\n  // Get user coupons\r\n  const GetUserCoupons = async () => {\r\n    let RawData = null;\r\n    const AccessToken = localStorage.getItem(\"AccessToken\");\r\n    if (!AccessToken) {\r\n      return \"Please login again\";\r\n    }\r\n    const AxiosResponse = await axiosConfig.get(`${CRMHost}/me/coupons `, {\r\n      headers: {\r\n        Authorization: `Bearer ${AccessToken}`,\r\n      },\r\n    });\r\n    if (AxiosResponse.status) {\r\n      return AxiosResponse.data;\r\n    }\r\n    if (AxiosResponse.message) {\r\n      RawData = AxiosResponse.message;\r\n      return RawData;\r\n    } else {\r\n      return AxiosResponse;\r\n    }\r\n  };\r\n  // check user coupon\r\n  const CheckUserCoupon = async (coupon, price, accommodation) => {\r\n    let RawData = null;\r\n    let ReplacementCharacter = \"%3F\";\r\n    let ReplacedCoupon = \"\";\r\n    let TrimmedCoupon = \"\";\r\n    const AccessToken = localStorage.getItem(\"AccessToken\");\r\n    if (!AccessToken) {\r\n      return \"Please login again\";\r\n    }\r\n    if (!coupon) {\r\n      return \"Please coupon select\";\r\n    }\r\n    if (!price) {\r\n      return;\r\n    }\r\n    if (!accommodation) {\r\n      return;\r\n    }\r\n    TrimmedCoupon = coupon.trim();\r\n    ReplacedCoupon = TrimmedCoupon;\r\n    // check last character ?\r\n    if (TrimmedCoupon[TrimmedCoupon.length - 1] == \"?\") {\r\n      ReplacedCoupon = TrimmedCoupon.slice(0, -1) + ReplacementCharacter;\r\n    }\r\n    const AxiosResponse = await axiosConfig.post(\r\n      `${CRMHost}/coupons/${ReplacedCoupon} `,\r\n      {\r\n        totalAmount: price,\r\n        accommodation: accommodation,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${AccessToken}`,\r\n        },\r\n      }\r\n    );\r\n    if (AxiosResponse.status) {\r\n      return AxiosResponse.data;\r\n    }\r\n    if (AxiosResponse.message) {\r\n      RawData = AxiosResponse.message;\r\n      return RawData;\r\n    } else {\r\n      return AxiosResponse;\r\n    }\r\n  };\r\n  // Get user coupons\r\n  const GetUserGuests = async () => {\r\n    let RawData = null;\r\n    const AccessToken = localStorage.getItem(\"AccessToken\");\r\n    if (!AccessToken) {\r\n      return \"error get user guest\";\r\n    }\r\n    const AxiosResponse = await axiosConfig.get(`${CRMHost}/me/guest`, {\r\n      headers: {\r\n        Authorization: `Bearer ${AccessToken}`,\r\n      },\r\n    });\r\n    if (AxiosResponse.status) {\r\n      return AxiosResponse.data;\r\n    }\r\n    if (AxiosResponse.message) {\r\n      RawData = AxiosResponse.message;\r\n      return RawData;\r\n    } else {\r\n      return AxiosResponse;\r\n    }\r\n  };\r\n  return {\r\n    SendRegisterData,\r\n    SendLoginData,\r\n    GetUserInformations,\r\n    GetUserReservations,\r\n    GetLoginVerificationCode,\r\n    ConfirmVerificationCode,\r\n    GetUserCoupons,\r\n    CheckUserCoupon,\r\n    GetUserGuests,\r\n  };\r\n}\r\nexport default AuthComposable;\r\n"],"names":["axiosConfig"],"mappings":"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"}