{"version":3,"file":"axiosConfig-89e67415.js","sources":["../../../../composables/HelperComposable.js","../../../../config.js","../../../../axiosConfig.js"],"sourcesContent":["function HelperComposable() {\r\n  let EmailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n  let PhoneNumberPattern = /^[0-9]{10}$/;\r\n  let TCPattern = /^[0-9]{11}$/;\r\n  let PasswordPattern = /^(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n  let GlobalPhoneNumberPattern = /^[0-9]{10,16}$/;\r\n\r\n  // name control\r\n  const CheckGuestName = (name) => {\r\n    if (!name) {\r\n      return \"InvalidName\";\r\n    }\r\n    const Name = name.trim();\r\n    if (!Name) {\r\n      return \"InvalidName\";\r\n    }\r\n    if (Name.length > 28) {\r\n      return \"NameIsTooLong\";\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  // surname control\r\n  const CheckGuestSurname = (surname) => {\r\n    if (!surname) {\r\n      return \"InvalidSurname\";\r\n    }\r\n    const Surname = surname.trim();\r\n    if (!Surname) {\r\n      return \"InvalidSurname\";\r\n    }\r\n    if (Surname.length > 22) {\r\n      return \"SurnameIsTooLong\";\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  // e-mail address control\r\n  const CheckGuestEmailAddress = (mail) => {\r\n    if (EmailPattern.test(mail)) {\r\n      return true;\r\n    } else {\r\n      return \"InvalidEmail\";\r\n    }\r\n  };\r\n  // phone number control\r\n  const CheckGuestPhoneNumber = (number) => {\r\n    number = number.replace(/^0|\\+90/g, \"\");\r\n    number = number.replace(/\\s/g, \"\");\r\n    if (PhoneNumberPattern.test(number)) {\r\n      return number;\r\n    } else {\r\n      return \"1\";\r\n    }\r\n  };\r\n  // global phone number control\r\n  const CheckGlobalGuestPhoneNumber = (number) => {\r\n    let TrimmedNumber;\r\n    if (number) {\r\n      TrimmedNumber = number.trim();\r\n      if (GlobalPhoneNumberPattern.test(TrimmedNumber)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  // tc number control\r\n  const CheckGuestTC = (tc) => {\r\n    const value = tc.toString();\r\n    const isEleven = TCPattern.test(tc);\r\n    let totalX = 0;\r\n    for (var i = 0; i < 10; i++) {\r\n      totalX += Number(value.substr(i, 1));\r\n    }\r\n    const isRuleX = totalX % 10 == value.substr(10, 1);\r\n    let totalY1 = 0;\r\n    let totalY2 = 0;\r\n    for (var i = 0; i < 10; i += 2) {\r\n      totalY1 += Number(value.substr(i, 1));\r\n    }\r\n    for (var i = 1; i < 10; i += 2) {\r\n      totalY2 += Number(value.substr(i, 1));\r\n    }\r\n    const isRuleY = (totalY1 * 7 - totalY2) % 10 == value.substr(9, 0);\r\n    if (isEleven && isRuleX && isRuleY) {\r\n      return true;\r\n    } else {\r\n      return \"InvalidTC\";\r\n    }\r\n  };\r\n  // passport number control\r\n  const CheckGuestPassport = (passport) => {\r\n    if (PhoneNumberPattern.test(passport)) {\r\n      return true;\r\n    } else {\r\n      return \"InvalidPassportNumber\";\r\n    }\r\n  };\r\n  // convert string type / yy-mm-dd\r\n  const DateFormatter = (SelectedDates) => {\r\n    const ParsedDate = new Date(SelectedDates);\r\n    const Year = ParsedDate.getFullYear();\r\n    const Month = (\"0\" + (ParsedDate.getMonth() + 1)).slice(-2);\r\n    const Day = (\"0\" + ParsedDate.getDate()).slice(-2);\r\n\r\n    return `${Year}-${Month}-${Day}`;\r\n  };\r\n  // calculate total nights\r\n  const CalculateNights = (checkInDate, checkOutDate) => {\r\n    //calculate 1 day as ms\r\n    const OneDay = 1000 * 60 * 60 * 24;\r\n    // convert dates to date objects\r\n    const CheckInDate = new Date(checkInDate);\r\n    const CheckOutDate = new Date(checkOutDate);\r\n    // get time from date objects\r\n    const CheckInTime = CheckInDate.getTime();\r\n    const CheckOutTime = CheckOutDate.getTime();\r\n    // find differences between times\r\n    const TimeDifference = Math.abs(CheckOutTime - CheckInTime);\r\n    const Nights = Math.round(TimeDifference / OneDay);\r\n    return Nights;\r\n  };\r\n  // Numeric controls\r\n  const IsNumeric = (val) => {\r\n    return /^\\d+$/.test(val);\r\n  };\r\n  // Password controls\r\n  const CheckPasswordStrength = (password) => {\r\n    const res = PasswordPattern.test(password);\r\n    if (res) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  // Compare passwords\r\n  const ComparePasswords = (password1, password2) => {\r\n    return password1 === password2;\r\n  };\r\n  // get screen width\r\n  const GetScreenWidth = () => {\r\n    return window.innerWidth;\r\n  };\r\n  const CheckGuestUserName = (username) => {\r\n    if (!username) {\r\n      return \"InvalidUserName\";\r\n    }\r\n    const UserName = username.trim();\r\n    if (UserName.length < 3) {\r\n      return \"InvalidUserName\";\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  const GetCRMHost = async () => {\r\n    // runtime config variable\r\n    let RuntimeConfig = useRuntimeConfig();\r\n    const CRMHost = RuntimeConfig.public.CRM_HOST;\r\n    return CRMHost;\r\n  };\r\n  // set default cookie\r\n  const SetDefaultCookie = () => {\r\n    // use cookie filters\r\n    const CookieFilters = useCookie(\"Filters\");\r\n    // obj\r\n    const Filters = ref({\r\n      GuestCount: null,\r\n      Dates: [],\r\n      UnParsedDates: [],\r\n      City: null,\r\n      SubCities: [],\r\n      DTO: [],\r\n      CurrentPage: 0,\r\n      Projects: [],\r\n    });\r\n\r\n    // set dates\r\n    CookieFilters.value = Filters.value;\r\n    const DefaultCheckIn = DateFormatter(new Date());\r\n    const DefaultCheckOut = DateFormatter(\r\n      new Date().setDate(new Date().getDate() + 3)\r\n    );\r\n    CookieFilters.value.Dates[0] = DefaultCheckIn;\r\n    CookieFilters.value.Dates[1] = DefaultCheckOut;\r\n\r\n    // set default city\r\n    const SelectedCity = ref({\r\n      countryId: 225,\r\n      fipsCode: \"07\",\r\n      id: 2169,\r\n      latitude: 37.0951672,\r\n      longitude: 31.0793705,\r\n      name: \"Antalya\",\r\n    });\r\n    CookieFilters.value.City = SelectedCity.value;\r\n    //  console.log(CookieFilters.value);\r\n  };\r\n  return {\r\n    CheckGuestName,\r\n    CheckGuestSurname,\r\n    CheckGuestEmailAddress,\r\n    CheckGuestPhoneNumber,\r\n    CheckGuestTC,\r\n    CheckGuestPassport,\r\n    DateFormatter,\r\n    CalculateNights,\r\n    IsNumeric,\r\n    CheckPasswordStrength,\r\n    ComparePasswords,\r\n    GetScreenWidth,\r\n    CheckGuestUserName,\r\n    GetCRMHost,\r\n    SetDefaultCookie,\r\n    CheckGlobalGuestPhoneNumber,\r\n  };\r\n}\r\nexport default HelperComposable;\r\n","export default {\r\n  CRM_HOST: \"https://testcrm.geccele.com/api/web\",\r\n  //CRM_HOST: \"https://crm.geccele.com/api/web\",\r\n  CRM_WEBSITE: \"1\",\r\n  GoogleMapsAPIKey: \"AIzaSyB1jnI1NLP_vSzfjXBGYAUb9R99s0S4rVE\",\r\n  CRM_FILTER_URL: \"\",\r\n  CRM_TURKIYE_ID: \"225\",\r\n  CRM_ANTALYA_ID: \"2169\",\r\n  CRM_FILTER_NEIGHBORHOOD: \"neighborhood\",\r\n  CRM_PAYMENT_TYPE: \"1\",\r\n  GOOGLE_DIRECTION_URL: \"https://www.google.com/maps/dir/?api=1&destination=\",\r\n};\r\n","import axios from \"axios\";\r\nimport config from \"./config.js\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: config.CRM_HOST, // base url\r\n  timeout: 30000, //timeout\r\n  headers: { \"X-Custom-Header\": \"foobar\" },\r\n});\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(\r\n  function (config) {\r\n    // Do something before request is sent\r\n    config.headers[\"Accept-Language\"] = \"tr\";\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(\r\n  function (response) {\r\n    // Do something with response data\r\n    //console.log(response.data.data);\r\n    const ResData = response.data.data;\r\n    if (ResData.numberOfElements === 0 || ResData == \"\") {\r\n      // window.location.href = \"/error\";\r\n    }\r\n    return response;\r\n  },\r\n  function (error) {\r\n    // get error codes\r\n    if (error.response) {\r\n      if (error.response.status) {\r\n        const statusCode = error.response.status;\r\n        if (statusCode === 404) {\r\n          //  window.location.href = \"/error\";\r\n        }\r\n      }\r\n    }\r\n    // Do something with response error\r\n    // return Promise.reject(error); // to catch the returning error, reject has been deprecated\r\n    return error.response.data;\r\n  }\r\n);\r\nexport default instance;\r\n"],"names":["config"],"mappings":"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"}