{"version":3,"file":"composables-2c3efc9a.js","sources":["../../../../node_modules/@nuxtjs/i18n/dist/runtime/composables.mjs"],"sourcesContent":["import { findBrowserLocale, getComposer } from \"vue-i18n-routing\";\nimport { useRoute, useRouter, useRequestHeaders, useCookie, useNuxtApp } from \"#imports\";\nimport { ref } from \"vue\";\nimport { parseAcceptLanguage } from \"#build/i18n.internal.mjs\";\nimport { nuxtI18nInternalOptions, nuxtI18nOptionsDefault, localeCodes as _localeCodes } from \"#build/i18n.options.mjs\";\nimport {\n  useRouteBaseName as _useRouteBaseName,\n  useLocalePath as _useLocalePath,\n  useLocaleRoute as _useLocaleRoute,\n  useSwitchLocalePath as _useSwitchLocalePath,\n  useLocaleHead as _useLocaleHead\n} from \"vue-i18n-routing\";\nexport * from \"vue-i18n\";\nexport function useRouteBaseName(options) {\n  const { route, router, i18n } = options || {};\n  return _useRouteBaseName({\n    route: route || useRoute(),\n    router: router || useRouter(),\n    i18n: i18n || getComposer(useNuxtApp().$i18n)\n  });\n}\nexport function useLocalePath(options) {\n  const { route, router, i18n } = options || {};\n  return _useLocalePath({\n    route: route || useRoute(),\n    router: router || useRouter(),\n    i18n: i18n || getComposer(useNuxtApp().$i18n)\n  });\n}\nexport function useLocaleRoute(options) {\n  const { route, router, i18n } = options || {};\n  return _useLocaleRoute({\n    route: route || useRoute(),\n    router: router || useRouter(),\n    i18n: i18n || getComposer(useNuxtApp().$i18n)\n  });\n}\nexport function useSwitchLocalePath(options) {\n  const { route, router, i18n } = options || {};\n  return _useSwitchLocalePath({\n    route: route || useRoute(),\n    router: router || useRouter(),\n    i18n: i18n || getComposer(useNuxtApp().$i18n)\n  });\n}\nexport function useLocaleHead(options) {\n  const { addDirAttribute, addSeoAttributes, identifierAttribute, route, router, i18n } = options || {};\n  return _useLocaleHead({\n    addDirAttribute: addDirAttribute || false,\n    addSeoAttributes: addSeoAttributes || false,\n    identifierAttribute: identifierAttribute || \"hid\",\n    route: route || useRoute(),\n    router: router || useRouter(),\n    i18n: i18n || getComposer(useNuxtApp().$i18n)\n  });\n}\nexport function useBrowserLocale(normalizedLocales = nuxtI18nInternalOptions.__normalizedLocales) {\n  const headers = useRequestHeaders([\"accept-language\"]);\n  return findBrowserLocale(\n    normalizedLocales,\n    process.client ? navigator.languages : parseAcceptLanguage(headers[\"accept-language\"] || \"\")\n  ) || null;\n}\nexport function useCookieLocale(options = {\n  useCookie: nuxtI18nOptionsDefault.detectBrowserLanguage.useCookie,\n  cookieKey: nuxtI18nOptionsDefault.detectBrowserLanguage.cookieKey,\n  localeCodes: _localeCodes\n}) {\n  const locale = ref(\"\");\n  if (options.useCookie) {\n    let code = null;\n    if (process.client) {\n      const cookie = useCookie(options.cookieKey);\n      code = cookie.value;\n    } else if (process.server) {\n      const cookie = useRequestHeaders([\"cookie\"]);\n      code = cookie[options.cookieKey];\n    }\n    if (code && options.localeCodes.includes(code)) {\n      locale.value = code;\n    }\n  }\n  return locale;\n}\nconst warnRuntimeUsage = (method) => console.warn(\n  method + \"() is a compiler-hint helper that is only usable inside the script block of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.\"\n);\nexport function defineI18nRoute(route) {\n  if (process.dev) {\n    warnRuntimeUsage(\"defineI18nRoute\");\n  }\n}\nexport function defineI18nLocale(locale) {\n  return locale;\n}\nexport function defineI18nConfig(config) {\n  return config;\n}\n"],"names":["_useLocalePath"],"mappings":";;;;;;;AAqBO,SAAS,cAAc,SAAS;AACrC,QAAM,EAAE,OAAO,QAAQ,KAAI,IAAK,WAAW,CAAA;AAC3C,SAAOA,gBAAe;AAAA,IACpB,OAAO,SAAS,SAAU;AAAA,IAC1B,QAAQ,UAAU,UAAW;AAAA,IAC7B,MAAM,QAAQ,YAAY,WAAU,EAAG,KAAK;AAAA,EAChD,CAAG;AACH;","x_google_ignoreList":[0]}